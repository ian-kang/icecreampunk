{"version":3,"sources":["components/icecream/icecream.module.css","components/tweet/tweets.module.css","components/header/header.module.css","App.module.css","components/button/button.module.css","components/check-influencer/checkInfluencer.module.css","components/check-item/checkItem.module.css","components/tweet/tweet.module.css","components/header/header.js","components/button/button.js","components/tweet/tweet.jsx","components/check-influencer/checkInfluencer.js","components/tweet/Tweets.js","components/check-item/checkItem.js","components/icecream/Icecream.js","components/home/Home.js","App.js","reportWebVitals.js","services/twitter/twitter.js","index.js"],"names":["module","exports","Header","className","styles","header","logo","navContainer","button","to","Button","text","onClick","disabled","Tweet","data","users","container","profileBox","src","alt","picture","name","author_id","username","textBox","countBox","retweetBox","retweetCount","public_metrics","retweet_count","replyBox","replyCount","reply_count","likeBox","likeCount","like_count","quoteBox","quoteCount","quote_count","CheckInfluencer","addAuthor","deleteAuthor","checkbox","type","id","onChange","event","target","checked","htmlFor","Tweets","twitter","useState","tweetData","setTweetData","undefined","progress","setProgress","checkedUsernameList","setCheckedUsernameList","queryLimit","setQueryLimit","isResponseEmpty","setIsResponseEmpty","a","getTweets","tweets","influencerNameList","Object","keys","influencerData","checkQueryLimit","authorsArray","resultStrings","author","length","updatedItems","filter","element","delLength","body","article","checkInfluencerContainer","map","spinner","Spinner","animation","variant","tweetListBox","CheckItem","item","addItem","deleteItem","DATABASE","dataset","Icecream","baseCanvasRef","useRef","downloadRef","canvasURL","checkedItemList","setItemList","imageData","includes","copyList","splice","console","log","useEffect","baseCanvas","current","context","getContext","clearRect","width","height","forEach","img","Image","crossOrigin","onload","drawImage","resultURL","toDataURL","href","totalItems","imageUrl","fetch","blob","filesArray","File","lastModified","Date","getTime","navigator","canShare","files","share","title","url","window","location","then","catch","error","checkItemContainer","category","categoryBox","canvasWrapper","canvasContainer","ref","canvas","downloadButton","download","Home","App","ReactGa","initialize","pageview","app","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Twitter","checkedNameList","query","join","process","response","json","jsonResponse","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6006c2f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"icecream_body__2Lf3b\",\"checkItemContainer\":\"icecream_checkItemContainer__3Mvt_\",\"categoryBox\":\"icecream_categoryBox__1Yfhm\",\"canvasWrapper\":\"icecream_canvasWrapper__1HjBC\",\"canvasContainer\":\"icecream_canvasContainer__1P8-r\",\"canvas\":\"icecream_canvas__2YHiO\",\"downloadButton\":\"icecream_downloadButton__2l8l2\",\"download\":\"icecream_download__1Bf3G\",\"layerContainer\":\"icecream_layerContainer__11ujj\",\"text\":\"icecream_text__2xVI4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"tweets_body__1Ue0b\",\"article\":\"tweets_article__SZxyr\",\"checkInfluencerContainer\":\"tweets_checkInfluencerContainer__3aBue\",\"button\":\"tweets_button__2wZPo\",\"spinner\":\"tweets_spinner__2gw_A\",\"tweetListBox\":\"tweets_tweetListBox__2DOj7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__8JEea\",\"logo\":\"header_logo__3AMbG\",\"button\":\"header_button__3mgtO\",\"navContainer\":\"header_navContainer__3AC8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3YGNG\",\"header\":\"App_header___3h_v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__6y3pi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"checkInfluencer_checkbox__1bRTw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"checkItem_checkbox__143P4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"tweet_container__29zam\",\"profileBox\":\"tweet_profileBox__1xYtU\",\"textBox\":\"tweet_textBox__2s2_C\",\"countBox\":\"tweet_countBox__2yA0A\",\"retweetBox\":\"tweet_retweetBox__2nTTl\",\"replyBox\":\"tweet_replyBox__3v4j1\",\"likeBox\":\"tweet_likeBox__3TUty\",\"quoteBox\":\"tweet_quoteBox__1cp0x\",\"picture\":\"tweet_picture__2gz6P\",\"name\":\"tweet_name__3E8jr\",\"username\":\"tweet_username__33b6q\",\"retweetCount\":\"tweet_retweetCount__BRQaS\",\"replyCount\":\"tweet_replyCount__1v3lM\",\"likeCount\":\"tweet_likeCount__1SbFP\",\"quoteCout\":\"tweet_quoteCout__24rcD\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./header.module.css\";\r\n\r\nconst Header = () => (\r\n  <header className={styles.header}>\r\n    <h1 className={styles.logo}>ICECREAMPUNKS</h1>\r\n    <div className={styles.navContainer}>\r\n      <button className={styles.button}>\r\n        <Link to=\"/tweets\">NFT Tweets</Link>\r\n      </button>\r\n      <button className={styles.button}>\r\n        <Link to=\"/icecream\">Icecreampunks</Link>\r\n      </button>\r\n      <button className={styles.button}>\r\n        <Link to=\"/\">Coming Soon</Link>\r\n      </button>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styles from \"./button.module.css\";\r\n\r\nconst Button = ({ text, onClick, disabled }) => (\r\n  <button disabled={disabled} className={styles.button} onClick={onClick}>\r\n    {text}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styles from \"./tweet.module.css\";\r\n\r\nconst Tweet = ({ data, users }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.profileBox}>\r\n        <img\r\n          src=\"https://res.cloudinary.com/db7ss52zt/image/upload/v1632529994/Mint-Color-solid-color-background_bvbi4z.jpg\"\r\n          alt=\"profile-pic\"\r\n          className={styles.picture}\r\n        />\r\n        <div className={styles.name}>{users[data.author_id][\"name\"]}</div>\r\n        <div className={styles.username}>\r\n          {`@${users[data.author_id][\"username\"]}`}\r\n        </div>\r\n      </div>\r\n      <div className={styles.textBox}>\r\n        <span className={styles.text}>{data.text}</span>\r\n      </div>\r\n      <div className={styles.countBox}>\r\n        <div className={styles.retweetBox}>\r\n          Retweet Count\r\n          <div className={styles.retweetCount}>\r\n            {data.public_metrics.retweet_count}\r\n          </div>\r\n        </div>\r\n        <div className={styles.replyBox}>\r\n          Reply Count\r\n          <div className={styles.replyCount}>\r\n            {data.public_metrics.reply_count}\r\n          </div>\r\n        </div>\r\n        <div className={styles.likeBox}>\r\n          Like Count\r\n          <div className={styles.likeCount}>\r\n            {data.public_metrics.like_count}\r\n          </div>\r\n        </div>\r\n        <div className={styles.quoteBox}>\r\n          Quote Count\r\n          <div className={styles.quoteCount}>\r\n            {data.public_metrics.quote_count}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Tweet;\r\n","import styles from \"./checkInfluencer.module.css\";\r\n\r\nconst CheckInfluencer = ({ name, addAuthor, deleteAuthor }) => {\r\n  const onCheckBox = (event) => {\r\n    if (event.target.checked) {\r\n      return addAuthor(event.target.name);\r\n    }\r\n    deleteAuthor(event.target.name);\r\n  };\r\n  return (\r\n    <div className={styles.checkbox}>\r\n      <input type=\"checkbox\" id={name} name={name} onChange={onCheckBox} />\r\n      <label htmlFor={name}>{name}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckInfluencer;\r\n","import Button from \"../button/button\";\r\nimport Tweet from \"./tweet\";\r\nimport styles from \"./tweets.module.css\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useState } from \"react\";\r\nimport CheckInfluencer from \"../check-influencer/checkInfluencer\";\r\nimport influencerData from \"../../localData/influencerData.json\";\r\n\r\nfunction Tweets({ twitter }) {\r\n  const [tweetData, setTweetData] = useState(null);\r\n  const [progress, setProgress] = useState(undefined);\r\n  const [checkedUsernameList, setCheckedUsernameList] = useState([]);\r\n  const [queryLimit, setQueryLimit] = useState(false);\r\n  const [isResponseEmpty, setIsResponseEmpty] = useState(false);\r\n  async function handlePullData() {\r\n    setProgress(\"on\");\r\n    const data = await twitter.getTweets(checkedUsernameList);\r\n    if (!data) {\r\n      setTweetData(null);\r\n      setProgress(undefined);\r\n      setIsResponseEmpty(true);\r\n      return;\r\n    }\r\n    setTweetData({ tweets: data.tweets, users: data.users });\r\n    setProgress(undefined);\r\n    setIsResponseEmpty(false);\r\n  }\r\n\r\n  const influencerNameList = Object.keys(influencerData);\r\n\r\n  const checkQueryLimit = (authorsArray) => {\r\n    let resultStrings = \"from:\";\r\n    for (const author of authorsArray) {\r\n      if (resultStrings.length === 5) {\r\n        resultStrings += author;\r\n      } else {\r\n        let fromSecondAuthor = ` OR from:${author}`;\r\n        resultStrings += fromSecondAuthor;\r\n      }\r\n    }\r\n    return resultStrings.length;\r\n  };\r\n\r\n  const addAuthor = (name) => {\r\n    const length = checkQueryLimit([\r\n      ...checkedUsernameList,\r\n      influencerData[name],\r\n    ]);\r\n    if (length < 480) {\r\n      setQueryLimit(false);\r\n    } else {\r\n      setQueryLimit(true);\r\n    }\r\n    setCheckedUsernameList([...checkedUsernameList, influencerData[name]]);\r\n  };\r\n  const deleteAuthor = (name) => {\r\n    const updatedItems = checkedUsernameList.filter(\r\n      (element) => element !== influencerData[name]\r\n    );\r\n    const delLength = checkQueryLimit(updatedItems);\r\n    if (delLength < 480) {\r\n      setQueryLimit(false);\r\n    } else {\r\n      setQueryLimit(true);\r\n    }\r\n    setCheckedUsernameList(updatedItems);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <article className={styles.article}>\r\n        Influencers' Tweets created in the last 7 days.\r\n      </article>\r\n      <div className={styles.checkInfluencerContainer}>\r\n        {influencerNameList.map((name) => (\r\n          <CheckInfluencer\r\n            key={name}\r\n            name={name}\r\n            addAuthor={addAuthor}\r\n            deleteAuthor={deleteAuthor}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {queryLimit ? (\r\n        <div className={styles.queryLimit}>Query limit is exceeded!</div>\r\n      ) : null}\r\n      <div className={styles.button}>\r\n        <Button\r\n          disabled={queryLimit}\r\n          text={\"Pull Data\"}\r\n          onClick={handlePullData}\r\n        />\r\n      </div>\r\n      <div className={styles.spinner}>\r\n        {progress ? (\r\n          <Spinner animation=\"grow\" variant=\"light\" />\r\n        ) : (\r\n          <div className={styles.tweetListBox}>\r\n            {isResponseEmpty && \"No data exist!\"}\r\n            {tweetData &&\r\n              tweetData.tweets.map((data) => (\r\n                <Tweet key={data.id} data={data} users={tweetData.users} />\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tweets;\r\n","import React from \"react\";\r\nimport styles from \"./checkItem.module.css\";\r\nimport DATABASE from \"../../localData/imageData.json\";\r\n\r\nconst CheckItem = ({ item, addItem, deleteItem }) => {\r\n  const { name } = DATABASE[item];\r\n  const onCheckBox = (event) => {\r\n    if (event.target.checked) {\r\n      return addItem(event.target.dataset.item);\r\n    }\r\n    deleteItem(event.target.dataset.item);\r\n  };\r\n  return (\r\n    <div className={styles.checkbox}>\r\n      <input\r\n        type=\"checkbox\"\r\n        id={name}\r\n        name={name}\r\n        data-item={item}\r\n        onChange={onCheckBox}\r\n      />\r\n      <label htmlFor={name}>{name}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckItem;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport CheckItem from \"../check-item/checkItem\";\r\nimport imageData from \"../../localData/imageData.json\";\r\nimport styles from \"./icecream.module.css\";\r\nimport Button from \"../button/button\";\r\n\r\nfunction Icecream() {\r\n  const baseCanvasRef = useRef();\r\n  const downloadRef = useRef();\r\n  const canvasURL = useRef();\r\n  const [checkedItemList, setItemList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const baseCanvas = baseCanvasRef.current;\r\n    const context = baseCanvas.getContext(\"2d\");\r\n    context.clearRect(0, 0, baseCanvas.width, baseCanvas.height);\r\n    checkedItemList &&\r\n      checkedItemList.forEach((item) => {\r\n        const img = new Image(); // Create new img element\r\n        img.src = imageData[item].src;\r\n        img.crossOrigin = \"Anonymous\";\r\n        img.onload = () => {\r\n          context.drawImage(img, 0, 0, baseCanvas.width, baseCanvas.height);\r\n          const resultURL = baseCanvas.toDataURL(\"image/png\");\r\n          downloadRef.current.href = resultURL;\r\n          canvasURL.current = resultURL;\r\n        };\r\n      });\r\n  });\r\n\r\n  function addItem(item) {\r\n    if (imageData[item][\"category\"].includes(\"Background\")) {\r\n      setItemList([item, ...checkedItemList]);\r\n      return;\r\n    } else if (imageData[item][\"category\"].includes(\"Body\")) {\r\n      let copyList = [...checkedItemList];\r\n      copyList.splice(1, 0, item);\r\n      console.log(copyList);\r\n      setItemList(copyList);\r\n      return;\r\n    }\r\n    setItemList([...checkedItemList, item]);\r\n  }\r\n\r\n  function deleteItem(item) {\r\n    const updatedItems = checkedItemList.filter((element) => element !== item);\r\n    setItemList(updatedItems);\r\n  }\r\n\r\n  const totalItems = Object.keys(imageData);\r\n\r\n  async function shareWebsite() {\r\n    const imageUrl = canvasURL.current;\r\n    const blob = await (await fetch(imageUrl)).blob();\r\n    const filesArray = [\r\n      new File([blob], \"Icecreampunk.png\", {\r\n        type: blob.type,\r\n        lastModified: new Date().getTime(),\r\n      }),\r\n    ];\r\n    if (navigator.canShare && navigator.canShare({ files: filesArray })) {\r\n      navigator\r\n        .share({\r\n          title: \"Icecreampunks\",\r\n          text: \"Create Your Own Icecreampunks\",\r\n          url: window.location.href,\r\n          files: filesArray,\r\n        })\r\n        .then(() => {\r\n          console.log(\"shared!\");\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      console.log(\"not supported!\");\r\n    }\r\n  }\r\n  const categories = [\r\n    \"Background\",\r\n    \"Skin\",\r\n    \"Hairstyle\",\r\n    \"Eye\",\r\n    // \"Eyebrows\",\r\n    \"Mouth\",\r\n    // \"Facial hair\",\r\n    \"Clothes\",\r\n    \"Icecream\",\r\n    // \"Etc\",\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <div className={styles.checkItemContainer}>\r\n        {categories.map((category) => (\r\n          <div className={styles.categoryBox}>\r\n            {category}\r\n            {totalItems\r\n              .filter((item) => imageData[item][\"category\"] === category)\r\n              .map((item) => (\r\n                <CheckItem\r\n                  key={item}\r\n                  item={item}\r\n                  addItem={addItem}\r\n                  deleteItem={deleteItem}\r\n                />\r\n              ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={styles.canvasWrapper}>\r\n        <div className={styles.canvasContainer}>\r\n          <canvas\r\n            ref={baseCanvasRef}\r\n            className={styles.canvas}\r\n            width=\"1280px\"\r\n            height=\"1280px\"\r\n          ></canvas>\r\n        </div>\r\n        <a\r\n          href=\"not\"\r\n          ref={downloadRef}\r\n          className={styles.downloadButton}\r\n          download=\"Icecreampunk.png\"\r\n        >\r\n          <span className={styles.download}>Download</span>\r\n          <i className=\"fas fa-ice-cream\"></i>\r\n        </a>\r\n        <Button text={\"Share\"} onClick={shareWebsite} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Icecream;\r\n","import React from \"react\";\r\n\r\nconst Home = () => <h1>Coming Soon</h1>;\r\n\r\nexport default Home;\r\n","import Header from \"./components/header/header\";\r\nimport Tweets from \"./components/tweet/Tweets\";\r\nimport { Link, Route, HashRouter } from \"react-router-dom\";\r\nimport Icecream from \"./components/icecream/Icecream\";\r\nimport Home from \"./components/home/Home\";\r\nimport styles from \"./App.module.css\";\r\nimport ReactGa from \"react-ga\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction App({ twitter }) {\r\n  useEffect(() => {\r\n    ReactGa.initialize(\"UA-208921762-2\");\r\n\r\n    //to report page view\r\n    ReactGa.pageview(\"/#/icecream\");\r\n  });\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      <HashRouter>\r\n        <div className={styles.header}>\r\n          <Link to=\"/\">\r\n            <Header />\r\n          </Link>\r\n        </div>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/tweets\">\r\n          <Tweets twitter={twitter} />\r\n        </Route>\r\n        <Route exact path=\"/icecream\">\r\n          <Icecream />\r\n        </Route>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default class Twitter {\r\n  async getTweets(checkedNameList) {\r\n    //checkedNameList = [\"beeple\", \"mcuban\", \"pplpleasr1\"...]\r\n\r\n    const query = checkedNameList.join(\",\");\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_TWEET_FETCH_URL}/tweet?authors=${query}`\r\n    );\r\n    const jsonResponse = await response.json();\r\n    if (!jsonResponse.includes) {\r\n      return undefined;\r\n    }\r\n\r\n    const users = {};\r\n    const authorData = jsonResponse.includes.users;\r\n    authorData.forEach((user) => {\r\n      users[user.id] = { name: user.name, username: user.username };\r\n    });\r\n\r\n    return { tweets: jsonResponse.data, users };\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Twitter from \"./services/twitter/twitter\";\r\n\r\nconst twitter = new Twitter();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App twitter={twitter} />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}