{"version":3,"sources":["components/icecream/icecream.module.css","components/header/header.module.css","components/search-box/searchBox.module.css","App.module.css","components/button/button.module.css","components/check-influencer/checkInfluencer.module.css","components/check-item/checkItem.module.css","components/tweet/tweet.module.css","components/header/header.js","components/button/button.js","components/tweet/tweet.jsx","components/check-influencer/checkInfluencer.js","components/googld-ad/Adsense.js","components/search-box/SearchBox.js","components/tweet/Tweets.js","components/check-item/checkItem.js","components/icecream/Icecream.js","components/home/Home.js","App.js","reportWebVitals.js","services/twitter/twitter.js","index.js","components/tweet/tweets.module.css"],"names":["module","exports","Header","className","styles","header","logo","navContainer","button","to","Button","text","onClick","disabled","Tweet","data","users","utcDate","localDate","Date","toString","container","profileBox","src","alt","picture","name","author_id","username","createdAt","textBox","countBox","retweetBox","retweetCount","public_metrics","retweet_count","replyBox","replyCount","reply_count","likeBox","likeCount","like_count","quoteBox","quoteCount","quote_count","CheckInfluencer","addAuthor","deleteAuthor","checkbox","type","id","onChange","event","target","checked","htmlFor","Adsense","props","style","display","SearchBox","onChangeSearchBox","searchBoxContainer","placeholder","searchBox","Tweets","twitter","useState","tweetData","setTweetData","undefined","progress","setProgress","checkedUsernameList","setCheckedUsernameList","queryLimit","setQueryLimit","isResponseEmpty","setIsResponseEmpty","searchKeyword","setSearchKeyword","a","ReactGa","category","action","getTweets","tweets","influencerNameList","Object","keys","influencerData","checkQueryLimit","authorsArray","resultStrings","author","length","delLength","updatedItems","filter","element","body","article","checkInfluencerContainer","map","mustKeyword","keyword","value","searchLength","spinner","Spinner","animation","variant","tweetListBox","CheckItem","item","addItem","deleteItem","DATABASE","dataset","Icecream","baseCanvasRef","useRef","canvasURL","checkedItemList","setItemList","imageData","copyList1","splice","copyList2","useEffect","baseCanvas","current","context","getContext","clearRect","width","height","forEach","img","Image","crossOrigin","onload","drawImage","totalItems","imageUrl","fetch","blob","filesArray","File","lastModified","getTime","navigator","canShare","files","share","title","url","window","location","href","then","console","log","catch","error","bodyContainer","checkItemContainer","categoryBox","canvasWrapper","canvasContainer","ref","canvas","download","Home","App","initialize","pageview","pathname","search","app","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Twitter","checkedNameList","query","join","process","response","json","jsonResponse","includes","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d490561b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyContainer\":\"icecream_bodyContainer__1tXjL\",\"body\":\"icecream_body__2Lf3b\",\"checkItemContainer\":\"icecream_checkItemContainer__3Mvt_\",\"categoryBox\":\"icecream_categoryBox__1Yfhm\",\"canvasWrapper\":\"icecream_canvasWrapper__1HjBC\",\"canvasContainer\":\"icecream_canvasContainer__1P8-r\",\"canvas\":\"icecream_canvas__2YHiO\",\"downloadButton\":\"icecream_downloadButton__2l8l2\",\"download\":\"icecream_download__1Bf3G\",\"layerContainer\":\"icecream_layerContainer__11ujj\",\"text\":\"icecream_text__2xVI4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__8JEea\",\"logo\":\"header_logo__3AMbG\",\"button\":\"header_button__3mgtO\",\"navContainer\":\"header_navContainer__3AC8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBox\":\"searchBox_searchBox__1agIX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3YGNG\",\"header\":\"App_header___3h_v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__6y3pi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"checkInfluencer_checkbox__1bRTw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"checkItem_checkbox__143P4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"tweet_container__29zam\",\"profileBox\":\"tweet_profileBox__1xYtU\",\"textBox\":\"tweet_textBox__2s2_C\",\"countBox\":\"tweet_countBox__2yA0A\",\"retweetBox\":\"tweet_retweetBox__2nTTl\",\"replyBox\":\"tweet_replyBox__3v4j1\",\"likeBox\":\"tweet_likeBox__3TUty\",\"quoteBox\":\"tweet_quoteBox__1cp0x\",\"picture\":\"tweet_picture__2gz6P\",\"name\":\"tweet_name__3E8jr\",\"username\":\"tweet_username__33b6q\",\"createdAt\":\"tweet_createdAt__7L13o\",\"retweetCount\":\"tweet_retweetCount__BRQaS\",\"replyCount\":\"tweet_replyCount__1v3lM\",\"likeCount\":\"tweet_likeCount__1SbFP\",\"quoteCout\":\"tweet_quoteCout__24rcD\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./header.module.css\";\r\n\r\nconst Header = () => (\r\n  <header className={styles.header}>\r\n    <h1 className={styles.logo}>ICECREAMPUNKS</h1>\r\n    <div className={styles.navContainer}>\r\n      <button className={styles.button}>\r\n        <Link to=\"/tweets\">NFT Tweets</Link>\r\n      </button>\r\n      <button className={styles.button}>\r\n        <Link to=\"/icecream\">Icecreampunks</Link>\r\n      </button>\r\n      <button className={styles.button}>\r\n        <Link to=\"/\">Coming Soon</Link>\r\n      </button>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styles from \"./button.module.css\";\r\n\r\nconst Button = ({ text, onClick, disabled }) => (\r\n  <button disabled={disabled} className={styles.button} onClick={onClick}>\r\n    {text}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styles from \"./tweet.module.css\";\r\n\r\nconst Tweet = ({ data, users }) => {\r\n  const utcDate = data[\"created_at\"];\r\n  const localDate = new Date(utcDate).toString();\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.profileBox}>\r\n        <img\r\n          src=\"https://res.cloudinary.com/db7ss52zt/image/upload/v1632529994/Mint-Color-solid-color-background_bvbi4z.jpg\"\r\n          alt=\"profile-pic\"\r\n          className={styles.picture}\r\n        />\r\n        <div className={styles.name}>{users[data.author_id][\"name\"]}</div>\r\n        <div className={styles.username}>\r\n          {`@${users[data.author_id][\"username\"]}`}\r\n        </div>\r\n        <div className={styles.createdAt}>{localDate}</div>\r\n      </div>\r\n      <div className={styles.textBox}>\r\n        <span className={styles.text}>{data.text}</span>\r\n      </div>\r\n      <div className={styles.countBox}>\r\n        <div className={styles.retweetBox}>\r\n          Retweet Count\r\n          <div className={styles.retweetCount}>\r\n            {data.public_metrics.retweet_count}\r\n          </div>\r\n        </div>\r\n        <div className={styles.replyBox}>\r\n          Reply Count\r\n          <div className={styles.replyCount}>\r\n            {data.public_metrics.reply_count}\r\n          </div>\r\n        </div>\r\n        <div className={styles.likeBox}>\r\n          Like Count\r\n          <div className={styles.likeCount}>\r\n            {data.public_metrics.like_count}\r\n          </div>\r\n        </div>\r\n        <div className={styles.quoteBox}>\r\n          Quote Count\r\n          <div className={styles.quoteCount}>\r\n            {data.public_metrics.quote_count}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Tweet;\r\n","import styles from \"./checkInfluencer.module.css\";\r\n\r\nconst CheckInfluencer = ({ name, addAuthor, deleteAuthor }) => {\r\n  const onCheckBox = (event) => {\r\n    if (event.target.checked) {\r\n      return addAuthor(event.target.name);\r\n    }\r\n    deleteAuthor(event.target.name);\r\n  };\r\n  return (\r\n    <div className={styles.checkbox}>\r\n      <input type=\"checkbox\" id={name} name={name} onChange={onCheckBox} />\r\n      <label htmlFor={name}>{name}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckInfluencer;\r\n","import React from \"react\";\r\n\r\nconst Adsense = (props) => {\r\n  return (\r\n    <ins\r\n      className=\"adsbygoogle\"\r\n      style={{ display: \"block\" }}\r\n      data-ad-client=\"ca-pub-1703216765823504\"\r\n      data-ad-slot=\"9250663973\"\r\n      data-ad-format=\"auto\"\r\n      data-full-width-responsive=\"true\"\r\n    ></ins>\r\n  );\r\n};\r\n\r\nexport default Adsense;\r\n","import React from \"react\";\r\nimport styles from \"./searchBox.module.css\";\r\n\r\nconst SearchBox = ({ onChangeSearchBox }) => (\r\n  <div className={styles.searchBoxContainer}>\r\n    <label htmlFor=\"search-box\">Search Keyword:</label>\r\n    <input\r\n      type=\"text\"\r\n      name=\"keyword\"\r\n      id=\"search-box\"\r\n      placeholder=\"Enter NFT or NFT project name to search\"\r\n      className={styles.searchBox}\r\n      onChange={onChangeSearchBox}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default SearchBox;\r\n<div className={styles.searchBoxContainer}></div>;\r\n","import Button from \"../button/button\";\r\nimport Tweet from \"./tweet\";\r\nimport styles from \"./tweets.module.css\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useState } from \"react\";\r\nimport CheckInfluencer from \"../check-influencer/checkInfluencer\";\r\nimport influencerData from \"../../localData/influencerData.json\";\r\nimport ReactGa from \"react-ga\";\r\nimport Adsense from \"../googld-ad/Adsense\";\r\nimport SearchBox from \"../search-box/SearchBox\";\r\n\r\nfunction Tweets({ twitter }) {\r\n  const [tweetData, setTweetData] = useState(null);\r\n  const [progress, setProgress] = useState(undefined);\r\n  const [checkedUsernameList, setCheckedUsernameList] = useState([]);\r\n  const [queryLimit, setQueryLimit] = useState(false);\r\n  const [isResponseEmpty, setIsResponseEmpty] = useState(false);\r\n  const [searchKeyword, setSearchKeyword] = useState(undefined);\r\n  async function handlePullData() {\r\n    ReactGa.event({\r\n      category: \"Pull Data Button\",\r\n      action: \"Click Pull Data button from NFT Tweet page\",\r\n    });\r\n    setProgress(\"on\");\r\n    const data = await twitter.getTweets(checkedUsernameList, searchKeyword);\r\n    if (!data) {\r\n      setTweetData(null);\r\n      setProgress(undefined);\r\n      setIsResponseEmpty(true);\r\n      return;\r\n    }\r\n    setTweetData({ tweets: data.tweets, users: data.users });\r\n    setProgress(undefined);\r\n    setIsResponseEmpty(false);\r\n  }\r\n\r\n  const influencerNameList = Object.keys(influencerData);\r\n\r\n  const checkQueryLimit = (authorsArray) => {\r\n    let resultStrings = \"from:\";\r\n    for (const author of authorsArray) {\r\n      if (resultStrings.length === 5) {\r\n        resultStrings += author;\r\n      } else {\r\n        let fromSecondAuthor = ` OR from:${author}`;\r\n        resultStrings += fromSecondAuthor;\r\n      }\r\n    }\r\n    return resultStrings.length;\r\n  };\r\n\r\n  const addAuthor = (name) => {\r\n    let length;\r\n    if (searchKeyword) {\r\n      length =\r\n        checkQueryLimit([...checkedUsernameList, influencerData[name]]) +\r\n        searchKeyword.length;\r\n    } else {\r\n      length = checkQueryLimit([...checkedUsernameList, influencerData[name]]);\r\n    }\r\n    if (length < 487) {\r\n      setQueryLimit(false);\r\n    } else {\r\n      setQueryLimit(true);\r\n    }\r\n    setCheckedUsernameList([...checkedUsernameList, influencerData[name]]);\r\n  };\r\n  const deleteAuthor = (name) => {\r\n    const updatedItems = checkedUsernameList.filter(\r\n      (element) => element !== influencerData[name]\r\n    );\r\n    let delLength;\r\n    if (searchKeyword) {\r\n      delLength = checkQueryLimit(updatedItems) + searchKeyword.length;\r\n    } else {\r\n      delLength = checkQueryLimit(updatedItems);\r\n    }\r\n    if (delLength < 487) {\r\n      setQueryLimit(false);\r\n    } else {\r\n      setQueryLimit(true);\r\n    }\r\n    setCheckedUsernameList(updatedItems);\r\n  };\r\n\r\n  const onChangeSearchBox = (event) => {\r\n    const keyword = event.target.value;\r\n    setSearchKeyword(keyword);\r\n    const searchLength =\r\n      checkQueryLimit([...checkedUsernameList]) + keyword.length;\r\n\r\n    if (searchLength < 487) {\r\n      setQueryLimit(false);\r\n    } else {\r\n      setQueryLimit(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <article className={styles.article}>\r\n        Influencers' Tweets created in the last 7 days.\r\n      </article>\r\n      <div className={styles.checkInfluencerContainer}>\r\n        {influencerNameList.map((name) => (\r\n          <CheckInfluencer\r\n            key={name}\r\n            name={name}\r\n            addAuthor={addAuthor}\r\n            deleteAuthor={deleteAuthor}\r\n          />\r\n        ))}\r\n      </div>\r\n      {queryLimit ? (\r\n        <div className={styles.queryLimit}>Query length limit is exceeded!</div>\r\n      ) : null}\r\n      {!checkedUsernameList.length ? (\r\n        <div className={styles.mustKeyword}>\r\n          NFT Influencer must be selected\r\n        </div>\r\n      ) : null}\r\n      {!searchKeyword ? (\r\n        <div className={styles.mustKeyword}>Search keyword must be entered</div>\r\n      ) : null}\r\n\r\n      <div className={styles.searchBox}>\r\n        <SearchBox onChangeSearchBox={onChangeSearchBox} />\r\n      </div>\r\n      <div className={styles.button}>\r\n        <Button\r\n          disabled={queryLimit || !searchKeyword || !checkedUsernameList.length}\r\n          text={\"Pull Data\"}\r\n          onClick={handlePullData}\r\n        />\r\n      </div>\r\n      <Adsense />\r\n      <div className={styles.spinner}>\r\n        {progress ? (\r\n          <Spinner animation=\"grow\" variant=\"light\" />\r\n        ) : (\r\n          <div className={styles.tweetListBox}>\r\n            {isResponseEmpty && \"No data exist!\"}\r\n            {tweetData &&\r\n              tweetData.tweets.map((data) => (\r\n                <Tweet key={data.id} data={data} users={tweetData.users} />\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tweets;\r\n","import React from \"react\";\r\nimport styles from \"./checkItem.module.css\";\r\nimport DATABASE from \"../../localData/imageData.json\";\r\n\r\nconst CheckItem = ({ item, addItem, deleteItem }) => {\r\n  const { name } = DATABASE[item];\r\n  const onCheckBox = (event) => {\r\n    if (event.target.checked) {\r\n      return addItem(event.target.dataset.item);\r\n    }\r\n    deleteItem(event.target.dataset.item);\r\n  };\r\n  return (\r\n    <div className={styles.checkbox}>\r\n      <input\r\n        type=\"checkbox\"\r\n        id={name}\r\n        name={name}\r\n        data-item={item}\r\n        onChange={onCheckBox}\r\n      />\r\n      <label htmlFor={name}>{name}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckItem;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport CheckItem from \"../check-item/checkItem\";\r\nimport imageData from \"../../localData/imageData.json\";\r\nimport styles from \"./icecream.module.css\";\r\nimport Button from \"../button/button\";\r\nimport ReactGa from \"react-ga\";\r\nimport Adsense from \"../googld-ad/Adsense\";\r\n\r\nfunction Icecream() {\r\n  const baseCanvasRef = useRef();\r\n  // const downloadRef = useRef();\r\n  const canvasURL = useRef();\r\n  const [checkedItemList, setItemList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const baseCanvas = baseCanvasRef.current;\r\n    const context = baseCanvas.getContext(\"2d\");\r\n    context.clearRect(0, 0, baseCanvas.width, baseCanvas.height);\r\n    checkedItemList &&\r\n      checkedItemList.forEach((item) => {\r\n        const img = new Image(); // Create new img element\r\n        img.src = imageData[item].src;\r\n        img.crossOrigin = \"Anonymous\";\r\n        img.onload = () => {\r\n          context.drawImage(img, 0, 0, baseCanvas.width, baseCanvas.height);\r\n          // const resultURL = baseCanvas.toDataURL(\"image/png\");\r\n          // downloadRef.current.href = resultURL;\r\n          // canvasURL.current = resultURL;\r\n        };\r\n      });\r\n  });\r\n\r\n  function addItem(item) {\r\n    switch (imageData[item][\"category\"]) {\r\n      case \"Background\":\r\n        setItemList([item, ...checkedItemList]);\r\n        break;\r\n      case \"Skin\":\r\n        let copyList1 = [...checkedItemList];\r\n        copyList1.splice(1, 0, item);\r\n        setItemList(copyList1);\r\n        break;\r\n      case \"Hairstyle\":\r\n        let copyList2 = [...checkedItemList];\r\n        copyList2.splice(2, 0, item);\r\n        setItemList(copyList2);\r\n        break;\r\n      default:\r\n        setItemList([...checkedItemList, item]);\r\n    }\r\n  }\r\n\r\n  function deleteItem(item) {\r\n    const updatedItems = checkedItemList.filter((element) => element !== item);\r\n    setItemList(updatedItems);\r\n  }\r\n\r\n  const totalItems = Object.keys(imageData);\r\n\r\n  async function shareWebsite() {\r\n    ReactGa.event({\r\n      category: \"Share Button\",\r\n      action: \"Click Share button from Icecreampunks page\",\r\n    });\r\n    const imageUrl = canvasURL.current;\r\n    const blob = await (await fetch(imageUrl)).blob();\r\n    const filesArray = [\r\n      new File([blob], \"Icecreampunk.png\", {\r\n        type: blob.type,\r\n        lastModified: new Date().getTime(),\r\n      }),\r\n    ];\r\n    if (navigator.canShare && navigator.canShare({ files: filesArray })) {\r\n      navigator\r\n        .share({\r\n          title: \"Icecreampunks\",\r\n          text: \"Create Your Own Icecreampunks\",\r\n          url: window.location.href,\r\n          files: filesArray,\r\n        })\r\n        .then(() => {\r\n          console.log(\"shared!\");\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      console.log(\"not supported!\");\r\n    }\r\n  }\r\n  const categories = [\r\n    \"Background\",\r\n    \"Skin\",\r\n    \"Hairstyle\",\r\n    \"Eye\",\r\n    // \"Eyebrows\",\r\n    \"Mouth\",\r\n    // \"Facial hair\",\r\n    \"Clothes\",\r\n    \"Icecream\",\r\n    // \"Etc\",\r\n  ];\r\n\r\n  // const clickHandler = () => {\r\n  //   ReactGa.event({\r\n  //     category: \"Download Button\",\r\n  //     action: \"Click Download button from Icecreampunks page\",\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <div className={styles.bodyContainer}>\r\n      <div className={styles.body}>\r\n        <div className={styles.checkItemContainer}>\r\n          {categories.map((category) => (\r\n            <div key={category} className={styles.categoryBox}>\r\n              {category}\r\n              {totalItems\r\n                .filter((item) => imageData[item][\"category\"] === category)\r\n                .map((item) => (\r\n                  <CheckItem\r\n                    key={item}\r\n                    item={item}\r\n                    addItem={addItem}\r\n                    deleteItem={deleteItem}\r\n                  />\r\n                ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className={styles.canvasWrapper}>\r\n          <div className={styles.canvasContainer}>\r\n            <canvas\r\n              ref={baseCanvasRef}\r\n              className={styles.canvas}\r\n              width=\"1968px\"\r\n              height=\"1968px\"\r\n            ></canvas>\r\n          </div>\r\n          {/* <a\r\n            href=\"unknown\"\r\n            ref={downloadRef}\r\n            className={styles.downloadButton}\r\n            // download=\"Icecreampunk.png\"\r\n            onClick={clickHandler}\r\n          > */}\r\n          <span className={styles.download}>\r\n            Preview <i className=\"fas fa-ice-cream\"></i>\r\n          </span>\r\n\r\n          {/* </a> */}\r\n          <Button text={\"Share\"} onClick={shareWebsite} />\r\n        </div>\r\n      </div>\r\n      <Adsense />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Icecream;\r\n","import React from \"react\";\r\nimport Adsense from \"../googld-ad/Adsense\";\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <h1>Coming Soon</h1>\r\n    <Adsense />\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","import Header from \"./components/header/header\";\r\nimport Tweets from \"./components/tweet/Tweets\";\r\nimport { Link, Route, HashRouter } from \"react-router-dom\";\r\nimport Icecream from \"./components/icecream/Icecream\";\r\nimport Home from \"./components/home/Home\";\r\nimport styles from \"./App.module.css\";\r\nimport ReactGa from \"react-ga\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction App({ twitter }) {\r\n  useEffect(() => {\r\n    ReactGa.initialize(\"UA-208921762-2\");\r\n\r\n    //to report page viewss\r\n    ReactGa.pageview(window.location.pathname + window.location.search);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      <HashRouter>\r\n        <div className={styles.header}>\r\n          <Link to=\"/\">\r\n            <Header />\r\n          </Link>\r\n        </div>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/tweets\">\r\n          <Tweets twitter={twitter} />\r\n        </Route>\r\n        <Route exact path=\"/icecream\">\r\n          <Icecream />\r\n        </Route>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default class Twitter {\r\n  async getTweets(checkedNameList, searchKeyword) {\r\n    //checkedNameList = [\"beeple\", \"mcuban\", \"pplpleasr1\"...]\r\n\r\n    const query = checkedNameList.join(\",\");\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_TWEET_FETCH_URL}/tweets?authors=${query}&keyword=${searchKeyword}`\r\n    );\r\n    const jsonResponse = await response.json();\r\n    if (!jsonResponse.includes) {\r\n      return undefined;\r\n    }\r\n\r\n    const users = {};\r\n    const authorData = jsonResponse.includes.users;\r\n    authorData.forEach((user) => {\r\n      users[user.id] = { name: user.name, username: user.username };\r\n    });\r\n\r\n    return { tweets: jsonResponse.data, users };\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Twitter from \"./services/twitter/twitter\";\r\n\r\nconst twitter = new Twitter();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App twitter={twitter} />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"tweets_body__1Ue0b\",\"article\":\"tweets_article__SZxyr\",\"checkInfluencerContainer\":\"tweets_checkInfluencerContainer__3aBue\",\"queryLimit\":\"tweets_queryLimit__1hGJ2\",\"searchBox\":\"tweets_searchBox__3ZXUy\",\"button\":\"tweets_button__2wZPo\",\"spinner\":\"tweets_spinner__2gw_A\",\"tweetListBox\":\"tweets_tweetListBox__2DOj7\"};"],"sourceRoot":""}