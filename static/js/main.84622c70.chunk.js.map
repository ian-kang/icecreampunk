{"version":3,"sources":["components/header/header.module.css","components/tweet/tweets.module.css","App.module.css","components/button/button.module.css","components/check-item/checkItem.module.css","components/tweet/tweet.module.css","components/header/header.js","components/button/button.js","components/tweet/tweet.jsx","components/tweet/Tweets.js","components/check-item/checkItem.js","components/icecream/Icecream.js","components/home/Home.js","App.js","reportWebVitals.js","services/twitter/twitter.js","index.js","components/icecream/icecream.module.css"],"names":["module","exports","Header","className","styles","header","logo","navContainer","button","to","Button","text","onClick","Tweet","data","users","container","profileBox","src","alt","picture","name","author_id","username","textBox","countBox","retweetBox","retweetCount","public_metrics","retweet_count","replyBox","replyCount","reply_count","likeBox","likeCount","like_count","quoteBox","quoteCount","quote_count","Tweets","twitter","useState","tweetData","setTweetData","undefined","progress","setProgress","a","getTweets","tweets","body","article","Spinner","animation","variant","tweetListBox","map","id","CheckItem","addItem","deleteItem","checkbox","type","onChange","event","console","log","target","checked","htmlFor","Icecream","baseCanvasRef","useRef","downloadRef","checkedItemList","setItemList","item","copyList","splice","updatedItems","filter","element","useEffect","baseCanvas","current","context","getContext","clearRect","width","height","forEach","img","Image","DATABASE","crossOrigin","onload","drawImage","resultURL","toDataURL","href","totalItems","Object","keys","checkItemContainer","canvasWrapper","canvasContainer","ref","canvas","downloadButton","download","navigator","share","title","url","window","location","then","catch","error","Home","App","app","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Twitter","fetch","process","response","json","jsonResponse","includes","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84622c70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__8JEea\",\"logo\":\"header_logo__3AMbG\",\"button\":\"header_button__3mgtO\",\"navContainer\":\"header_navContainer__3AC8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"tweets_body__1Ue0b\",\"button\":\"tweets_button__2wZPo\",\"tweetListBox\":\"tweets_tweetListBox__2DOj7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3YGNG\",\"header\":\"App_header___3h_v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__6y3pi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"checkItem_checkbox__143P4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"tweet_container__29zam\",\"profileBox\":\"tweet_profileBox__1xYtU\",\"textBox\":\"tweet_textBox__2s2_C\",\"countBox\":\"tweet_countBox__2yA0A\",\"retweetBox\":\"tweet_retweetBox__2nTTl\",\"replyBox\":\"tweet_replyBox__3v4j1\",\"likeBox\":\"tweet_likeBox__3TUty\",\"quoteBox\":\"tweet_quoteBox__1cp0x\",\"picture\":\"tweet_picture__2gz6P\",\"name\":\"tweet_name__3E8jr\",\"username\":\"tweet_username__33b6q\",\"retweetCount\":\"tweet_retweetCount__BRQaS\",\"replyCount\":\"tweet_replyCount__1v3lM\",\"likeCount\":\"tweet_likeCount__1SbFP\",\"quoteCout\":\"tweet_quoteCout__24rcD\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./header.module.css\";\r\n\r\nconst Header = () => (\r\n  <header className={styles.header}>\r\n    <h1 className={styles.logo}>ICECREAMPUNKS</h1>\r\n    <div className={styles.navContainer}>\r\n      <button className={styles.button}>\r\n        <Link to=\"/tweets\">NFT Tweets</Link>\r\n      </button>\r\n      <button className={styles.button}>\r\n        <Link to=\"/icecream\">Icecreampunks</Link>\r\n      </button>\r\n      <button className={styles.button}>\r\n        <Link to=\"/\">Coming Soon</Link>\r\n      </button>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styles from \"./button.module.css\";\r\n\r\nconst Button = ({ text, onClick }) => (\r\n  <button className={styles.button} onClick={onClick}>\r\n    {text}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styles from \"./tweet.module.css\";\r\n\r\nconst Tweet = ({ data, users }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.profileBox}>\r\n        <img\r\n          src=\"https://pbs.twimg.com/profile_images/1422637130/mccigartrophy_400x400.jpg\"\r\n          alt=\"profile-pic\"\r\n          className={styles.picture}\r\n        />\r\n        <div className={styles.name}>{users[data.author_id][\"name\"]}</div>\r\n        <div className={styles.username}>\r\n          {`@${users[data.author_id][\"username\"]}`}\r\n        </div>\r\n      </div>\r\n      <div className={styles.textBox}>\r\n        <span className={styles.text}>{data.text}</span>\r\n      </div>\r\n      <div className={styles.countBox}>\r\n        <div className={styles.retweetBox}>\r\n          Retweet Count\r\n          <div className={styles.retweetCount}>\r\n            {data.public_metrics.retweet_count}\r\n          </div>\r\n        </div>\r\n        <div className={styles.replyBox}>\r\n          Reply Count\r\n          <div className={styles.replyCount}>\r\n            {data.public_metrics.reply_count}\r\n          </div>\r\n        </div>\r\n        <div className={styles.likeBox}>\r\n          Like Count\r\n          <div className={styles.likeCount}>\r\n            {data.public_metrics.like_count}\r\n          </div>\r\n        </div>\r\n        <div className={styles.quoteBox}>\r\n          Quote Count\r\n          <div className={styles.quoteCount}>\r\n            {data.public_metrics.quote_count}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Tweet;\r\n","import Button from \"../button/button\";\r\nimport Tweet from \"./tweet\";\r\nimport styles from \"./tweets.module.css\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Tweets({ twitter }) {\r\n  const [tweetData, setTweetData] = useState(null);\r\n  const [progress, setProgress] = useState(undefined);\r\n\r\n  async function handlePullData() {\r\n    setProgress(\"on\");\r\n    const data = await twitter.getTweets();\r\n    setTweetData({ tweets: data.tweets, users: data.users });\r\n    setProgress(undefined);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <article className={styles.article}>\r\n        Influencers' Tweets created in the last 7 days.\r\n      </article>\r\n      <div className={styles.button}>\r\n        <Button text={\"Pull Data\"} onClick={handlePullData} />\r\n      </div>\r\n      {progress ? (\r\n        <Spinner animation=\"grow\" variant=\"light\" />\r\n      ) : (\r\n        <div className={styles.tweetListBox}>\r\n          {tweetData &&\r\n            tweetData.tweets.map((data) => (\r\n              <Tweet key={data.id} data={data} users={tweetData.users} />\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tweets;\r\n","import React from \"react\";\r\nimport styles from \"./checkItem.module.css\";\r\n\r\nconst CheckItem = ({ text, addItem, deleteItem }) => {\r\n  const onCheckBox = (event) => {\r\n    console.log(event.target.name, event.target.checked);\r\n    if (event.target.checked) {\r\n      return addItem(event.target.name);\r\n    }\r\n    deleteItem(event.target.name);\r\n  };\r\n  return (\r\n    <div className={styles.checkbox}>\r\n      <input type=\"checkbox\" id={text} name={text} onChange={onCheckBox} />\r\n      <label htmlFor={text}>{text}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckItem;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport CheckItem from \"../check-item/checkItem\";\r\nimport DATABASE from \"../../localData/imageData.json\";\r\nimport styles from \"./icecream.module.css\";\r\nimport Button from \"../button/button\";\r\n\r\nfunction Icecream() {\r\n  const baseCanvasRef = useRef();\r\n  const downloadRef = useRef();\r\n  const [checkedItemList, setItemList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const baseCanvas = baseCanvasRef.current;\r\n    const context = baseCanvas.getContext(\"2d\");\r\n    context.clearRect(0, 0, baseCanvas.width, baseCanvas.height);\r\n    checkedItemList &&\r\n      checkedItemList.forEach((item) => {\r\n        const img = new Image(); // Create new img element\r\n        img.src = DATABASE[item].src;\r\n        img.crossOrigin = \"Anonymous\";\r\n        img.onload = () => {\r\n          context.drawImage(img, 0, 0, baseCanvas.width, baseCanvas.height);\r\n          const resultURL = baseCanvas.toDataURL(\"image/png\");\r\n          downloadRef.current.href = resultURL;\r\n        };\r\n      });\r\n  });\r\n\r\n  function addItem(item) {\r\n    if (item === \"background\") {\r\n      setItemList([item, ...checkedItemList]);\r\n      return;\r\n    } else if (item === \"body1\") {\r\n      let copyList = [...checkedItemList];\r\n      copyList.splice(1, 0, item);\r\n      console.log(copyList);\r\n      setItemList(copyList);\r\n      return;\r\n    }\r\n    setItemList([...checkedItemList, item]);\r\n  }\r\n\r\n  function deleteItem(item) {\r\n    const updatedItems = checkedItemList.filter((element) => element !== item);\r\n    console.log(updatedItems);\r\n\r\n    setItemList(updatedItems);\r\n  }\r\n\r\n  const totalItems = Object.keys(DATABASE);\r\n\r\n  function shareWebsite() {\r\n    if (navigator.share) {\r\n      navigator\r\n        .share({\r\n          title: \"Icecreampunks\",\r\n          url: window.location.href,\r\n        })\r\n        .then(() => {\r\n          console.log(\"shared!\", window.location.href);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      console.log(\"not supported!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.body}>\r\n      <div className={styles.checkItemContainer}>\r\n        {totalItems.map((item) => (\r\n          <CheckItem\r\n            key={item}\r\n            text={item}\r\n            addItem={addItem}\r\n            deleteItem={deleteItem}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className={styles.canvasWrapper}>\r\n        <div className={styles.canvasContainer}>\r\n          <canvas\r\n            ref={baseCanvasRef}\r\n            className={styles.canvas}\r\n            width=\"500px\"\r\n            height=\"500px\"\r\n          ></canvas>\r\n        </div>\r\n        <a\r\n          ref={downloadRef}\r\n          className={styles.downloadButton}\r\n          download=\"Icecreampunk.png\"\r\n        >\r\n          <span className={styles.download}>Download</span>\r\n          <i className=\"fas fa-ice-cream\"></i>\r\n        </a>\r\n        <Button text={\"Share\"} onClick={shareWebsite} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Icecream;\r\n","import React from \"react\";\r\n\r\nconst Home = () => <h1>Home</h1>;\r\n\r\nexport default Home;\r\n","import Header from \"./components/header/header\";\r\nimport Tweets from \"./components/tweet/Tweets\";\r\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\r\nimport Icecream from \"./components/icecream/Icecream\";\r\nimport Home from \"./components/home/Home\";\r\nimport styles from \"./App.module.css\";\r\n\r\nfunction App({ twitter }) {\r\n  return (\r\n    <div className={styles.app}>\r\n      <Router>\r\n        <div className={styles.header}>\r\n          <Link to=\"/\">\r\n            <Header />\r\n          </Link>\r\n        </div>\r\n\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/tweets\">\r\n          <Tweets twitter={twitter} />\r\n        </Route>\r\n        <Route exact path=\"/icecream\">\r\n          <Icecream />\r\n        </Route>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default class Twitter {\r\n  async getTweets() {\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_TWEET_FETCH_URL}/tweet`\r\n    );\r\n\r\n    const jsonResponse = await response.json();\r\n\r\n    const users = {};\r\n    const authorData = jsonResponse.includes.users;\r\n    authorData.forEach((user) => {\r\n      users[user.id] = { name: user.name, username: user.username };\r\n    });\r\n\r\n    return { tweets: jsonResponse.data, users };\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Twitter from \"./services/twitter/twitter\";\r\n\r\nconst twitter = new Twitter();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App twitter={twitter} />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"icecream_body__2Lf3b\",\"checkItemContainer\":\"icecream_checkItemContainer__3Mvt_\",\"canvasWrapper\":\"icecream_canvasWrapper__1HjBC\",\"canvasContainer\":\"icecream_canvasContainer__1P8-r\",\"canvas\":\"icecream_canvas__2YHiO\",\"downloadButton\":\"icecream_downloadButton__2l8l2\",\"download\":\"icecream_download__1Bf3G\",\"layerContainer\":\"icecream_layerContainer__11ujj\",\"text\":\"icecream_text__2xVI4\"};"],"sourceRoot":""}